{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\n\nconst store_1 = require(\"@web3-react/store\");\n\nconst react_1 = require(\"react\");\n\nconst zustand_1 = __importDefault(require(\"zustand\"));\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @param allowedChainIds - An optional array of chainIds which the `connector` may connect to. If the `connector` is\n * connected to a chainId which is not allowed, a ChainIdNotAllowedError error will be reported.\n * If this argument is unspecified, the `connector` may connect to any chainId.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\n\n\nfunction initializeConnector(f, allowedChainIds) {\n  const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)(allowedChainIds);\n  const connector = f(actions);\n  const useConnector = (0, zustand_1.default)(store);\n  const stateHooks = getStateHooks(useConnector);\n  const derivedHooks = getDerivedHooks(stateHooks);\n  const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n  return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\n\nexports.initializeConnector = initializeConnector;\n\nfunction computeIsActive(_ref) {\n  let {\n    chainId,\n    accounts,\n    activating,\n    error\n  } = _ref;\n  return Boolean(chainId && accounts && !activating && !error);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\n\n\nfunction getSelectedConnector() {\n  for (var _len = arguments.length, initializedConnectors = new Array(_len), _key = 0; _key < _len; _key++) {\n    initializedConnectors[_key] = arguments[_key];\n  }\n\n  function getIndex(connector) {\n    const index = initializedConnectors.findIndex(_ref2 => {\n      let [initializedConnector] = _ref2;\n      return connector === initializedConnector;\n    });\n    if (index === -1) throw new Error('Connector not found');\n    return index;\n  }\n\n  function useSelectedStore(connector) {\n    const store = initializedConnectors[getIndex(connector)][2];\n    if (!store) throw new Error('Stores not passed');\n    return store;\n  } // the following code calls hooks in a map a lot, which violates the eslint rule.\n  // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n\n\n  function useSelectedChainId(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref3 => {\n      let [, {\n        useChainId\n      }] = _ref3;\n      return useChainId();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedAccounts(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref4 => {\n      let [, {\n        useAccounts\n      }] = _ref4;\n      return useAccounts();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedIsActivating(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref5 => {\n      let [, {\n        useIsActivating\n      }] = _ref5;\n      return useIsActivating();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedError(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref6 => {\n      let [, {\n        useError\n      }] = _ref6;\n      return useError();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedAccount(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref7 => {\n      let [, {\n        useAccount\n      }] = _ref7;\n      return useAccount();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedIsActive(connector) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref8 => {\n      let [, {\n        useIsActive\n      }] = _ref8;\n      return useIsActive();\n    });\n    return values[getIndex(connector)];\n  }\n\n  function useSelectedProvider(connector, network) {\n    const index = getIndex(connector); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const values = initializedConnectors.map((_ref9, i) => {\n      let [, {\n        useProvider\n      }] = _ref9;\n      return useProvider(network, i === index);\n    });\n    return values[index];\n  }\n\n  function useSelectedENSNames(connector, provider) {\n    const index = getIndex(connector);\n    const values = initializedConnectors.map((_ref10, i) => {\n      let [, {\n        useENSNames\n      }] = _ref10;\n      return (// eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined)\n      );\n    });\n    return values[index];\n  }\n\n  function useSelectedENSName(connector, provider) {\n    const index = getIndex(connector); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const values = initializedConnectors.map((_ref11, i) => {\n      let [, {\n        useENSName\n      }] = _ref11;\n      return useENSName(i === index ? provider : undefined);\n    });\n    return values[index];\n  }\n\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedError,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  };\n}\n\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\n\nfunction getPriorityConnector() {\n  for (var _len2 = arguments.length, initializedConnectors = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    initializedConnectors[_key2] = arguments[_key2];\n  }\n\n  const {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedError,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName\n  } = getSelectedConnector(...initializedConnectors);\n\n  function usePriorityConnector() {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const values = initializedConnectors.map(_ref12 => {\n      let [, {\n        useIsActive\n      }] = _ref12;\n      return useIsActive();\n    });\n    const index = values.findIndex(isActive => isActive);\n    return initializedConnectors[index === -1 ? 0 : index][0];\n  }\n\n  function usePriorityStore() {\n    return useSelectedStore(usePriorityConnector());\n  }\n\n  function usePriorityChainId() {\n    return useSelectedChainId(usePriorityConnector());\n  }\n\n  function usePriorityAccounts() {\n    return useSelectedAccounts(usePriorityConnector());\n  }\n\n  function usePriorityIsActivating() {\n    return useSelectedIsActivating(usePriorityConnector());\n  }\n\n  function usePriorityError() {\n    return useSelectedError(usePriorityConnector());\n  }\n\n  function usePriorityAccount() {\n    return useSelectedAccount(usePriorityConnector());\n  }\n\n  function usePriorityIsActive() {\n    return useSelectedIsActive(usePriorityConnector());\n  }\n\n  function usePriorityProvider(network) {\n    return useSelectedProvider(usePriorityConnector(), network);\n  }\n\n  function usePriorityENSNames(provider) {\n    return useSelectedENSNames(usePriorityConnector(), provider);\n  }\n\n  function usePriorityENSName(provider) {\n    return useSelectedENSName(usePriorityConnector(), provider);\n  }\n\n  return {\n    useSelectedStore,\n    useSelectedChainId,\n    useSelectedAccounts,\n    useSelectedIsActivating,\n    useSelectedError,\n    useSelectedAccount,\n    useSelectedIsActive,\n    useSelectedProvider,\n    useSelectedENSNames,\n    useSelectedENSName,\n    usePriorityConnector,\n    usePriorityStore,\n    usePriorityChainId,\n    usePriorityAccounts,\n    usePriorityIsActivating,\n    usePriorityError,\n    usePriorityAccount,\n    usePriorityIsActive,\n    usePriorityProvider,\n    usePriorityENSNames,\n    usePriorityENSName\n  };\n}\n\nexports.getPriorityConnector = getPriorityConnector;\n\nconst CHAIN_ID = state => state.chainId;\n\nconst ACCOUNTS = state => state.accounts;\n\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => oldAccounts === undefined && newAccounts === undefined || oldAccounts !== undefined && oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) && oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]);\n\nconst ACTIVATING = state => state.activating;\n\nconst ERROR = state => state.error;\n\nfunction getStateHooks(useConnector) {\n  function useChainId() {\n    return useConnector(CHAIN_ID);\n  }\n\n  function useAccounts() {\n    return useConnector(ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n  }\n\n  function useIsActivating() {\n    return useConnector(ACTIVATING);\n  }\n\n  function useError() {\n    return useConnector(ERROR);\n  }\n\n  return {\n    useChainId,\n    useAccounts,\n    useIsActivating,\n    useError\n  };\n}\n\nfunction getDerivedHooks(_ref13) {\n  let {\n    useChainId,\n    useAccounts,\n    useIsActivating,\n    useError\n  } = _ref13;\n\n  function useAccount() {\n    var _a;\n\n    return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  function useIsActive() {\n    const chainId = useChainId();\n    const accounts = useAccounts();\n    const activating = useIsActivating();\n    const error = useError();\n    return computeIsActive({\n      chainId,\n      accounts,\n      activating,\n      error\n    });\n  }\n\n  return {\n    useAccount,\n    useIsActive\n  };\n}\n\nfunction useENS(provider, accounts) {\n  const [ENSNames, setENSNames] = (0, react_1.useState)();\n  (0, react_1.useEffect)(() => {\n    if (provider && (accounts === null || accounts === void 0 ? void 0 : accounts.length)) {\n      let stale = false;\n      Promise.all(accounts.map(account => provider.lookupAddress(account))).then(ENSNames => {\n        if (!stale) {\n          setENSNames(ENSNames);\n        }\n      }).catch(error => {\n        console.debug('Could not fetch ENS names', error);\n      });\n      return () => {\n        stale = true;\n        setENSNames(undefined);\n      };\n    }\n  }, [provider, accounts]);\n  return ENSNames;\n}\n\nfunction getAugmentedHooks(connector, _ref14, _ref15) {\n  let {\n    useChainId,\n    useAccounts\n  } = _ref14;\n  let {\n    useAccount,\n    useIsActive\n  } = _ref15;\n\n  function useProvider(network) {\n    let enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const isActive = useIsActive();\n    const chainId = useChainId();\n    const accounts = useAccounts(); // trigger the dynamic import on mount\n\n    const [providers, setProviders] = (0, react_1.useState)(undefined);\n    (0, react_1.useEffect)(() => {\n      Promise.resolve().then(() => __importStar(require('@ethersproject/providers'))).then(setProviders).catch(() => {\n        console.debug('@ethersproject/providers not available');\n      });\n    }, []);\n    return (0, react_1.useMemo)(() => {\n      // we use chainId and accounts to re-render in case connector.provider changes in place\n      if (providers && enabled && isActive && chainId && accounts && connector.provider) {\n        return new providers.Web3Provider(connector.provider, network);\n      }\n    }, [providers, enabled, isActive, chainId, accounts, network]);\n  }\n\n  function useENSNames(provider) {\n    const accounts = useAccounts();\n    return useENS(provider, accounts);\n  }\n\n  function useENSName(provider) {\n    var _a;\n\n    const account = useAccount();\n    const accounts = (0, react_1.useMemo)(() => account === undefined ? undefined : [account], [account]);\n    return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n  }\n\n  return {\n    useProvider,\n    useENSNames,\n    useENSName\n  };\n}","map":{"version":3,"sources":["/Users/computer/code/avalanche/web3-react/packages/core/dist/hooks.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","__importDefault","exports","getPriorityConnector","getSelectedConnector","initializeConnector","store_1","require","react_1","zustand_1","f","allowedChainIds","store","actions","createWeb3ReactStoreAndActions","connector","useConnector","default","stateHooks","getStateHooks","derivedHooks","getDerivedHooks","augmentedHooks","getAugmentedHooks","assign","computeIsActive","chainId","accounts","activating","error","Boolean","initializedConnectors","getIndex","index","findIndex","initializedConnector","Error","useSelectedStore","useSelectedChainId","values","map","useChainId","useSelectedAccounts","useAccounts","useSelectedIsActivating","useIsActivating","useSelectedError","useError","useSelectedAccount","useAccount","useSelectedIsActive","useIsActive","useSelectedProvider","network","i","useProvider","useSelectedENSNames","provider","useENSNames","useSelectedENSName","useENSName","usePriorityConnector","isActive","usePriorityStore","usePriorityChainId","usePriorityAccounts","usePriorityIsActivating","usePriorityError","usePriorityAccount","usePriorityIsActive","usePriorityProvider","usePriorityENSNames","usePriorityENSName","CHAIN_ID","state","ACCOUNTS","ACCOUNTS_EQUALITY_CHECKER","oldAccounts","newAccounts","length","every","oldAccount","ACTIVATING","ERROR","_a","useENS","ENSNames","setENSNames","useState","useEffect","stale","Promise","all","account","lookupAddress","then","catch","console","debug","enabled","providers","setProviders","resolve","useMemo","Web3Provider"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = require(\"@web3-react/store\");\nconst react_1 = require(\"react\");\nconst zustand_1 = __importDefault(require(\"zustand\"));\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @param allowedChainIds - An optional array of chainIds which the `connector` may connect to. If the `connector` is\n * connected to a chainId which is not allowed, a ChainIdNotAllowedError error will be reported.\n * If this argument is unspecified, the `connector` may connect to any chainId.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f, allowedChainIds) {\n    const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)(allowedChainIds);\n    const connector = f(actions);\n    const useConnector = (0, zustand_1.default)(store);\n    const stateHooks = getStateHooks(useConnector);\n    const derivedHooks = getDerivedHooks(stateHooks);\n    const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n    return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({ chainId, accounts, activating, error }) {\n    return Boolean(chainId && accounts && !activating && !error);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n    function getIndex(connector) {\n        const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n        if (index === -1)\n            throw new Error('Connector not found');\n        return index;\n    }\n    function useSelectedStore(connector) {\n        const store = initializedConnectors[getIndex(connector)][2];\n        if (!store)\n            throw new Error('Stores not passed');\n        return store;\n    }\n    // the following code calls hooks in a map a lot, which violates the eslint rule.\n    // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n    function useSelectedChainId(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useChainId }]) => useChainId());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccounts(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccounts }]) => useAccounts());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActivating(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActivating }]) => useIsActivating());\n        return values[getIndex(connector)];\n    }\n    function useSelectedError(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useError }]) => useError());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccount(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccount }]) => useAccount());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActive(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        return values[getIndex(connector)];\n    }\n    function useSelectedProvider(connector, network) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useProvider }], i) => useProvider(network, i === index));\n        return values[index];\n    }\n    function useSelectedENSNames(connector, provider) {\n        const index = getIndex(connector);\n        const values = initializedConnectors.map(([, { useENSNames }], i) => \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined));\n        return values[index];\n    }\n    function useSelectedENSName(connector, provider) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useENSName }], i) => useENSName(i === index ? provider : undefined));\n        return values[index];\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedError,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n    };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n    const { useSelectedStore, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedError, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = getSelectedConnector(...initializedConnectors);\n    function usePriorityConnector() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        const index = values.findIndex((isActive) => isActive);\n        return initializedConnectors[index === -1 ? 0 : index][0];\n    }\n    function usePriorityStore() {\n        return useSelectedStore(usePriorityConnector());\n    }\n    function usePriorityChainId() {\n        return useSelectedChainId(usePriorityConnector());\n    }\n    function usePriorityAccounts() {\n        return useSelectedAccounts(usePriorityConnector());\n    }\n    function usePriorityIsActivating() {\n        return useSelectedIsActivating(usePriorityConnector());\n    }\n    function usePriorityError() {\n        return useSelectedError(usePriorityConnector());\n    }\n    function usePriorityAccount() {\n        return useSelectedAccount(usePriorityConnector());\n    }\n    function usePriorityIsActive() {\n        return useSelectedIsActive(usePriorityConnector());\n    }\n    function usePriorityProvider(network) {\n        return useSelectedProvider(usePriorityConnector(), network);\n    }\n    function usePriorityENSNames(provider) {\n        return useSelectedENSNames(usePriorityConnector(), provider);\n    }\n    function usePriorityENSName(provider) {\n        return useSelectedENSName(usePriorityConnector(), provider);\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedError,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n        usePriorityConnector,\n        usePriorityStore,\n        usePriorityChainId,\n        usePriorityAccounts,\n        usePriorityIsActivating,\n        usePriorityError,\n        usePriorityAccount,\n        usePriorityIsActive,\n        usePriorityProvider,\n        usePriorityENSNames,\n        usePriorityENSName,\n    };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = (state) => state.chainId;\nconst ACCOUNTS = (state) => state.accounts;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => (oldAccounts === undefined && newAccounts === undefined) ||\n    (oldAccounts !== undefined &&\n        oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) &&\n        oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]));\nconst ACTIVATING = (state) => state.activating;\nconst ERROR = (state) => state.error;\nfunction getStateHooks(useConnector) {\n    function useChainId() {\n        return useConnector(CHAIN_ID);\n    }\n    function useAccounts() {\n        return useConnector(ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n    }\n    function useIsActivating() {\n        return useConnector(ACTIVATING);\n    }\n    function useError() {\n        return useConnector(ERROR);\n    }\n    return { useChainId, useAccounts, useIsActivating, useError };\n}\nfunction getDerivedHooks({ useChainId, useAccounts, useIsActivating, useError }) {\n    function useAccount() {\n        var _a;\n        return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    function useIsActive() {\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        const activating = useIsActivating();\n        const error = useError();\n        return computeIsActive({\n            chainId,\n            accounts,\n            activating,\n            error,\n        });\n    }\n    return { useAccount, useIsActive };\n}\nfunction useENS(provider, accounts) {\n    const [ENSNames, setENSNames] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (provider && (accounts === null || accounts === void 0 ? void 0 : accounts.length)) {\n            let stale = false;\n            Promise.all(accounts.map((account) => provider.lookupAddress(account)))\n                .then((ENSNames) => {\n                if (!stale) {\n                    setENSNames(ENSNames);\n                }\n            })\n                .catch((error) => {\n                console.debug('Could not fetch ENS names', error);\n            });\n            return () => {\n                stale = true;\n                setENSNames(undefined);\n            };\n        }\n    }, [provider, accounts]);\n    return ENSNames;\n}\nfunction getAugmentedHooks(connector, { useChainId, useAccounts }, { useAccount, useIsActive }) {\n    function useProvider(network, enabled = true) {\n        const isActive = useIsActive();\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        // trigger the dynamic import on mount\n        const [providers, setProviders] = (0, react_1.useState)(undefined);\n        (0, react_1.useEffect)(() => {\n            Promise.resolve().then(() => __importStar(require('@ethersproject/providers'))).then(setProviders).catch(() => {\n                console.debug('@ethersproject/providers not available');\n            });\n        }, []);\n        return (0, react_1.useMemo)(() => {\n            // we use chainId and accounts to re-render in case connector.provider changes in place\n            if (providers && enabled && isActive && chainId && accounts && connector.provider) {\n                return new providers.Web3Provider(connector.provider, network);\n            }\n        }, [providers, enabled, isActive, chainId, accounts, network]);\n    }\n    function useENSNames(provider) {\n        const accounts = useAccounts();\n        return useENS(provider, accounts);\n    }\n    function useENSName(provider) {\n        var _a;\n        const account = useAccount();\n        const accounts = (0, react_1.useMemo)(() => (account === undefined ? undefined : [account]), [account]);\n        return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    return { useProvider, useENSNames, useENSName };\n}\n"]},"metadata":{},"sourceType":"script"}