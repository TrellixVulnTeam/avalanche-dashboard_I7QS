{"ast":null,"code":"import { useDebugValue } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\n\nfunction createStore(createState) {\n  let state;\n  const listeners = /* @__PURE__ */new Set();\n\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(listener => listener(state, previousState));\n    }\n  };\n\n  const getState = () => state;\n\n  const subscribe = listener => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n\n  const destroy = () => listeners.clear();\n\n  const api = {\n    setState,\n    getState,\n    subscribe,\n    destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nfunction useStore(api) {\n  let selector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : api.getState;\n  let equalityFn = arguments.length > 2 ? arguments[2] : undefined;\n  const slice = useSyncExternalStoreWithSelector(api.subscribe, api.getState, null, selector, equalityFn);\n  useDebugValue(slice);\n  return slice;\n}\n\nfunction create(createState) {\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n}\n\nexport { create as default, useStore };","map":{"version":3,"sources":["/Users/computer/code/avalanche/web3-react/packages/core/node_modules/zustand/esm/index.js"],"names":["useDebugValue","useSyncExternalStoreWithSelector","createStore","createState","state","listeners","Set","setState","partial","replace","nextState","previousState","Object","assign","forEach","listener","getState","subscribe","add","delete","destroy","clear","api","useStore","selector","equalityFn","slice","create","useBoundStore","default"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,gCAAT,QAAiD,+CAAjD;;AAEA,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAChC,MAAIC,KAAJ;AACA,QAAMC,SAAS,GAAG,eAAgB,IAAIC,GAAJ,EAAlC;;AACA,QAAMC,QAAQ,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACrC,UAAMC,SAAS,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACJ,KAAD,CAAvC,GAAiDI,OAAnE;;AACA,QAAIE,SAAS,KAAKN,KAAlB,EAAyB;AACvB,YAAMO,aAAa,GAAGP,KAAtB;AACAA,MAAAA,KAAK,GAAGK,OAAO,GAAGC,SAAH,GAAeE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,EAAyBM,SAAzB,CAA9B;AACAL,MAAAA,SAAS,CAACS,OAAV,CAAmBC,QAAD,IAAcA,QAAQ,CAACX,KAAD,EAAQO,aAAR,CAAxC;AACD;AACF,GAPD;;AAQA,QAAMK,QAAQ,GAAG,MAAMZ,KAAvB;;AACA,QAAMa,SAAS,GAAIF,QAAD,IAAc;AAC9BV,IAAAA,SAAS,CAACa,GAAV,CAAcH,QAAd;AACA,WAAO,MAAMV,SAAS,CAACc,MAAV,CAAiBJ,QAAjB,CAAb;AACD,GAHD;;AAIA,QAAMK,OAAO,GAAG,MAAMf,SAAS,CAACgB,KAAV,EAAtB;;AACA,QAAMC,GAAG,GAAG;AAAEf,IAAAA,QAAF;AAAYS,IAAAA,QAAZ;AAAsBC,IAAAA,SAAtB;AAAiCG,IAAAA;AAAjC,GAAZ;AACAhB,EAAAA,KAAK,GAAGD,WAAW,CAACI,QAAD,EAAWS,QAAX,EAAqBM,GAArB,CAAnB;AACA,SAAOA,GAAP;AACD;;AAED,SAASC,QAAT,CAAkBD,GAAlB,EAA4D;AAAA,MAArCE,QAAqC,uEAA1BF,GAAG,CAACN,QAAsB;AAAA,MAAZS,UAAY;AAC1D,QAAMC,KAAK,GAAGzB,gCAAgC,CAACqB,GAAG,CAACL,SAAL,EAAgBK,GAAG,CAACN,QAApB,EAA8B,IAA9B,EAAoCQ,QAApC,EAA8CC,UAA9C,CAA9C;AACAzB,EAAAA,aAAa,CAAC0B,KAAD,CAAb;AACA,SAAOA,KAAP;AACD;;AACD,SAASC,MAAT,CAAgBxB,WAAhB,EAA6B;AAC3B,QAAMmB,GAAG,GAAG,OAAOnB,WAAP,KAAuB,UAAvB,GAAoCD,WAAW,CAACC,WAAD,CAA/C,GAA+DA,WAA3E;;AACA,QAAMyB,aAAa,GAAG,CAACJ,QAAD,EAAWC,UAAX,KAA0BF,QAAQ,CAACD,GAAD,EAAME,QAAN,EAAgBC,UAAhB,CAAxD;;AACAb,EAAAA,MAAM,CAACC,MAAP,CAAce,aAAd,EAA6BN,GAA7B;AACA,SAAOM,aAAP;AACD;;AAED,SAASD,MAAM,IAAIE,OAAnB,EAA4BN,QAA5B","sourcesContent":["import { useDebugValue } from 'react';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector.js';\n\nfunction createStore(createState) {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (nextState !== state) {\n      const previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => listeners.clear();\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nfunction useStore(api, selector = api.getState, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(api.subscribe, api.getState, null, selector, equalityFn);\n  useDebugValue(slice);\n  return slice;\n}\nfunction create(createState) {\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n}\n\nexport { create as default, useStore };\n"]},"metadata":{},"sourceType":"module"}